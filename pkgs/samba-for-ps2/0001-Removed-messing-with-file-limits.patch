From c707fb3c698cda7e1ef7b31151f80a63e25873c4 Mon Sep 17 00:00:00 2001
From: rtkt <rtkt@protonmail.com>
Date: Thu, 27 Jun 2024 02:12:09 +0700
Subject: [PATCH] Removed messing with file limits

---
 source3/lib/util.c | 71 ----------------------------------------------
 1 file changed, 71 deletions(-)

diff --git a/source3/lib/util.c b/source3/lib/util.c
index 51dc50d0b66..4d42ce56e1b 100644
--- a/source3/lib/util.c
+++ b/source3/lib/util.c
@@ -1296,81 +1296,10 @@ void zero_free(void *p, size_t size)
 
 int set_maxfiles(int requested_max)
 {
-#if (defined(HAVE_GETRLIMIT) && defined(RLIMIT_NOFILE))
-	struct rlimit rlp;
-	int saved_current_limit;
-
-	if(getrlimit(RLIMIT_NOFILE, &rlp)) {
-		DEBUG(0,("set_maxfiles: getrlimit (1) for RLIMIT_NOFILE failed with error %s\n",
-			strerror(errno) ));
-		/* just guess... */
-		return requested_max;
-	}
-
-	/*
-	 * Set the fd limit to be real_max_open_files + MAX_OPEN_FUDGEFACTOR to
-	 * account for the extra fd we need
-	 * as well as the log files and standard
-	 * handles etc. Save the limit we want to set in case
-	 * we are running on an OS that doesn't support this limit (AIX)
-	 * which always returns RLIM_INFINITY for rlp.rlim_max.
-	 */
-
-	/* Try raising the hard (max) limit to the requested amount. */
-
-#if defined(RLIM_INFINITY)
-	if (rlp.rlim_max != RLIM_INFINITY) {
-		int orig_max = rlp.rlim_max;
-
-		if ( rlp.rlim_max < requested_max )
-			rlp.rlim_max = requested_max;
-
-		/* This failing is not an error - many systems (Linux) don't
-			support our default request of 10,000 open files. JRA. */
-
-		if(setrlimit(RLIMIT_NOFILE, &rlp)) {
-			DEBUG(3,("set_maxfiles: setrlimit for RLIMIT_NOFILE for %d max files failed with error %s\n",
-				(int)rlp.rlim_max, strerror(errno) ));
-
-			/* Set failed - restore original value from get. */
-			rlp.rlim_max = orig_max;
-		}
-	}
-#endif
-
-	/* Now try setting the soft (current) limit. */
-
-	saved_current_limit = rlp.rlim_cur = MIN(requested_max,rlp.rlim_max);
-
-	if(setrlimit(RLIMIT_NOFILE, &rlp)) {
-		DEBUG(0,("set_maxfiles: setrlimit for RLIMIT_NOFILE for %d files failed with error %s\n",
-			(int)rlp.rlim_cur, strerror(errno) ));
-		/* just guess... */
-		return saved_current_limit;
-	}
-
-	if(getrlimit(RLIMIT_NOFILE, &rlp)) {
-		DEBUG(0,("set_maxfiles: getrlimit (2) for RLIMIT_NOFILE failed with error %s\n",
-			strerror(errno) ));
-		/* just guess... */
-		return saved_current_limit;
-    }
-
-#if defined(RLIM_INFINITY)
-	if(rlp.rlim_cur == RLIM_INFINITY)
-		return saved_current_limit;
-#endif
-
-	if((int)rlp.rlim_cur > saved_current_limit)
-		return saved_current_limit;
-
-	return rlp.rlim_cur;
-#else /* !defined(HAVE_GETRLIMIT) || !defined(RLIMIT_NOFILE) */
 	/*
 	 * No way to know - just guess...
 	 */
 	return requested_max;
-#endif
 }
 
 /*****************************************************************
-- 
2.45.1

